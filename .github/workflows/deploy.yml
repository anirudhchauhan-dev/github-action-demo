name: Backend Deployment with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Checkout code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Get version from package.json
      - name: Get version from package.json
        id: version_info
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 5: Build and Push Docker image using Docker Compose
      - name: Build and Push Docker image
        run: |
          VERSION=${VERSION } docker-compose build
          VERSION=${VERSION } docker-compose push

      # Step 6: SSH into EC2 instance and deploy using Docker Compose
      - name: SSH and deploy Docker Compose to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Exit on any failure
            
            # Pull the latest images from Docker Hub
            VERSION=${ VERSION } docker-compose pull

            # Start the application with Docker Compose
            VERSION=${ env.VERSION } docker-compose up -d --remove-orphans

      # Step 7: Rollback on failure
      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deployment failed, rolling back to previous version..."

            # Stop and remove the current failed container
            docker-compose down

            # Pull the previous Docker image (tagged as 'latest')
            docker pull ${{ secrets.DOCKER_USERNAME }}/nestjs-app:latest

            # Replace the current version with 'latest' and redeploy
            docker-compose up -d --build --remove-orphans

            echo "Rollback complete."
