name: Backend Deployment with Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Checkout code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (needed for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Get version from package.json
      - name: Get version from package.json
        id: version_info
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 5: Build, tag, and push Docker image to the registry
      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nestjs-app:latest
            ${{ secrets.DOCKER_USERNAME }}/nestjs-app:${{ env.VERSION }}
        continue-on-error: true

      # Step 6: SSH into EC2 instance and handle deployment
      - name: SSH and deploy Docker image to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e  # Exit on any failure

            # Create a temporary .env file
            echo "Setting up environment variables..."
            cat /home/${{ secrets.EC2_USER }}/.env | xargs > /tmp/.env

            # Check if the .env file was created successfully
            if [ ! -f /tmp/.env ]; then
                echo "Failed to create /tmp/.env"
                exit 1
            fi
            
            # Verify contents of the .env file
            echo "Contents of /tmp/.env:"
            cat /tmp/.env

            # Pull the latest Docker image from Docker Hub
            echo "Deploying Docker image with version ${{ env.VERSION }}..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nestjs-app:${{ env.VERSION }}

            # Stop and remove any existing container
            sudo docker stop test_app.dev || true
            sudo docker rm test_app.dev || true

            # Run the new Docker container with the .env file
            echo "Running Docker container with environment variables..."
            sudo docker run -d -p 3000:3000 --name test_app.dev --env-file /tmp/.env ${{ secrets.DOCKER_USERNAME }}/nestjs-app:${{ env.VERSION }}
            echo "Deployment complete."


      # Step 7: Rollback in case of failure
      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deployment failed, rolling back to previous version..."
            sudo docker stop test_app.dev || true
            sudo docker rm test_app.dev || true

            # Pull the previous Docker image from Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nestjs-app:latest

            # Run the previous Docker container with the .env file
            sudo docker run -d -p 3000:3000 --name test_app.dev --env-file /tmp/.env ${{ secrets.DOCKER_USERNAME }}/nestjs-app:latest
            echo "Rollback complete."
